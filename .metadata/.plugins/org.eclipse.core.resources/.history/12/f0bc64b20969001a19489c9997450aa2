package PayconiqRestAssuredBDDFramework.testscript;

import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import PayconiqRestAssuredBDDFramework.util.*;
import groovy.json.JsonSlurper;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import static io.restassured.RestAssured.*;

import java.util.Map;

import org.json.JSONObject;

public class TestsApi {
	 
	@BeforeClass
    public void setup (){
		//Setup Base URL
        Base.setBaseURI("https://api.github.com/gists"); 
    }
	
	
	@Test(priority = 1)
	public void postGist() {
		Response postGistResponse=Base.getResponse(baseURI);
		JSONObject postGistResponseBody=Base.getResponseBody(postGistResponse);
		String responseString= postGistResponseBody.toString();
		
		//Verify Response Status Code
		UtilMethods.checkResponseStatusCode(postGistResponse,201);
		
		// Get the desired value of a parameter
		String gistId = postGistResponseBody.getString("id");

		// Printing Gist Id in Console
		System.out.println("Gist id is:" + gistId );
		
		//Verify description
		String expectedDescriptionValue ="Hello World Examples";
		UtilMethods.assertParameterValue(postGistResponseBody,"description",expectedDescriptionValue);
		
		//Verify whether Public or Private
		String expectedpublicValue ="true";
		UtilMethods.assertParameterValue(postGistResponseBody,"public",expectedpublicValue);
		
//		//Verify whether Login id is expected or not
//		String expectedLoginId ="rohit1212s";
//		UtilMethods.assertParameterValue(postGistResponseBody,"owner.login",expectedLoginId);
		
		//Verify whether FileName is correct or not
		String expectedFileName ="hello_world_python.txt";
		UtilMethods.assertParameterValue(postGistResponseBody,"filename",expectedFileName);
		
		//Verify whether Content is expected or not
		String expectedContent ="Run `python hello_world.py` to print Hello World";
		UtilMethods.assertParameterValue(postGistResponseBody,"content",expectedContent);
		
//		 JsonSlurper slurper = new JsonSlurper();
//		 Map parsedJson = slurper.parseText(responseString);
//		 String vehicle_id = parsedJson.owner.login;
		
		
		
		
		
		
		
		
		
		
		
	
	}
}

